1.Create a program to input a Date from the user in dd/mm/yyyy format and print it in English.
program:-
package dob;
import java.util.*;
import java.util.Scanner;

public class Dob {

	public static HashMap<String, String> date = new HashMap<String, String>();
	public static HashMap<String, String> month = new HashMap<String, String>();
	public static HashMap<String, String> yearle = new HashMap<String, String>();
	public static HashMap<String, String> yearRi = new HashMap<String, String>();

	public static void genData() {
		date.put("01", "First");
		date.put("02", "Second");
		date.put("03", "Third");
		date.put("04", "Fourth");
		date.put("05", "Fifth");
		date.put("06", "Sixth");
		date.put("07", "Seventh");
		date.put("08", "Eighth");
		date.put("09", "Nineth");
		date.put("10", "Tenth");
		date.put("11", "Eleventh");
		date.put("12", "Tweleveth");
		date.put("13", "Thirteenth");
		date.put("14", "Fourteenth");
		date.put("15", "Fifteenth");
		date.put("16", "Sixteenth");
		date.put("17", "Seventeenth");
		date.put("18", "Eighteenth");
		date.put("19", "Nineteenth");
		date.put("20", "Twenty");
		date.put("21", "Twenty First");
		date.put("22", "Twenty Second");
		date.put("23", "Twenty Third");
		date.put("24", "Twenty Fourth");
		date.put("25", "Twent Fifth");
		date.put("26", "Twenty Sixth");
		date.put("27", "Twenty Seventh");
		date.put("28", "Twenty Eighth");
		date.put("29", "Twenty Nineth");
		date.put("30", "Thirty");
		date.put("31", "Thirty First");

		month.put("01", "January");
		month.put("02", "February");
		month.put("03", "March");
		month.put("04", "April");
		month.put("05", "May");
		month.put("06", "June");
		month.put("07", "July");
		month.put("08", "August");
		month.put("09", "September");
		month.put("10", "October");
		month.put("11", "November");
		month.put("12", "December");

		yearle.put("07", "Seven");
		yearle.put("08", "Eight");
		yearle.put("09", "Nine");
		yearle.put("10", "Ten");
		yearle.put("11", "Eleven");
		yearle.put("12", "Tweleve");
		yearle.put("13", "Thirteen");
		yearle.put("14", "Fourteen");
		yearle.put("15", "Fifteen");
		yearle.put("16", "Sixteen");
		yearle.put("17", "Seventeen");
		yearle.put("18", "Eighteen");
		yearle.put("19", "Nineteen");
		yearle.put("20", "Twenty");
		yearle.put("21", "Twenty One");
		yearle.put("22", "Twenty Two");

		yearRi.put("00", "Hundred");
		yearRi.put("10", "Ten");
		yearRi.put("20", "Twenty");
		yearRi.put("30", "Thirty");
		yearRi.put("40", "Forty");
		yearRi.put("50", "Fifty");
		yearRi.put("60", "Sixty");
		yearRi.put("70", "Seventy");
		yearRi.put("80", "Eighty");
		yearRi.put("90", "Ninety");
	}

	public static String convert(String dateInput) {
		String dd = dateInput.substring(0, 2);
		String mm = dateInput.substring(3, 5);
		String yL = dateInput.substring(6, 8);
		String yR = dateInput.substring(8, 10);
		return date.get(dd) + " " + month.get(mm) + " " + yearle.get(yL) + " " + yearRi.get(yR);
	}

	public static void main(String args[]) {

		genData();
                Scanner input = new Scanner(System.in);

		System.out.println("enter the date");
                String yy=input.nextLine();
		System.out.println(convert(yy));



	}
}
 2. Create a generic Sorting function that can sort any type of array (primitive types).
program:-
package gen1;
import java.util.ArrayList;
import java.util.*;
import static java.util.Arrays.sort;
public class Gen1 {
    public static <T> void  printArray(T array[]){
        for(T var:array)
        {
            System.out.print(" "+var);
        }
    
           }
    public static void main(String[] args) 
    {
      Integer array[]={22,13,25,23,6,8,9,};
      Float array2[]={6f,4f,2f,3f};
        Character array1[]={'m','u','k','u','n','d'};
        printArray(array);
        System.out.println();
        sort(array);
        printArray(array);
         System.out.println();
         printArray(array2);
         System.out.println();
         sort(array2);
         printArray(array2);
         System.out.println();
        printArray(array1);
        sort(array1);
        System.out.println();
        printArray(array1);
        System.out.println();
    }
    
    
}

3.Create a generic print function that can print all types of arrays (primitive types).
program:-
	package gen;
public class Gen    {
    public static <T> void  printArray(T array[]){
        for(T var:array)
        {
            System.out.print(" "+var);
        }
    
           }
    public static  void main(String[] args) {
        Integer array[]={2,3,5,3,6,8,9,};
        Character array1[]={'A','c','e','f'};
        printArray(array);
        System.out.println();
        printArray(array1);
       
    }
    
}
4. Write a java program that sorts the list on the basis of age and name.
program:-
	package person; 
import java.util.ArrayList;
import java.util.Collections;
public class Person implements Comparable<Person>
{
    String name;
    int age;
    Person(int age, String name )
    {
        this.name=name ;
        this.age=age;
    } 

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }
    
    public static void main(String[] args) {
        Person p1=new Person( 20,"aashu");
         Person p2=new Person( 21,"krishna");
          Person p3=new Person( 10,"gupta");
           Person p4=new Person( 15,"kanahaiya");
            Person p5=new Person( 25,"aashutosh");
            ArrayList<Person> arr=new ArrayList<Person>();
            
            arr.add(p1);
            arr.add(p2);
            arr.add(p3);
            arr.add(p4);
            arr.add(p5);
            for(Person per:arr)
            {
               System.out.println(per.getAge()+""+per.getName()+"");
            }
            Personcompare namecompare=new Personcompare();
            Collections.sort(arr,namecompare);
            for(Person per:arr)
            {
               System.out.println(per.getAge()+""+per.getName()+"");
            }
            Collections.sort(arr);
            for(Person per:arr)
            {
               System.out.println(per.getAge()+""+per.getName()+"");
            }
    
    
    }

    @Override
    public int compareTo(Person t) {
       return this.age-t.age; 
    }
}

///This is  a new class for comparator.And it is called in main funtion of main class (above).


package person;
import java.util.Comparator;
public class Personcompare implements Comparator<Person> 
{

    

    @Override
    public int compare(Person t, Person t1) {
        return t.getName().compareTo(t1.getName());
       
    }
    
}



